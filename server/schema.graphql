type Query {
  status: Status!
}

type Subscription {
  status: Status!
}

type Status {
  system: SystemStatus!
  manager: ManagerStatus!
  servers: [Server!]!
}

type SystemStatus {
  cpuLoad: Float!
  usedMemory: Int!
  totalMemory: Int!
}

type ManagerStatus {
  pid: Int!
  cpuLoad: Float!
  usedMemory: Int!
}

type Server {
  id: ID!
  name: String!
  runError: String
  status: ServerStatus
  options: ServerOptions!
}

type ServerStatus {
  players: Int!
  maxPlayers: Int!
  pid: Int!
  cpuLoad: Float!
  usedMemory: Int!
}

type ServerOptions {
  serverX: Int!
  serverY: Int!
  port: Int!
  queryPort: Int!
  altSaveDirectoryName: String!
  maxPlayers: Int!
  reservedPlayerSlots: Int!
  seamlessIp: String!
  rconPort: Int
  battleEye: Boolean!
  preExecArgs: String!
  postExecArgs: [String!]
}
